= ログを取り込むまでのステップ
ログをよしなに取り込むにはFILTERでログフォーマットに合わせて定義をする必要があります。
なので、この章ではどのようにログを取り込むかをステップを踏んで解説していきたいと思います。

1. 取り込むログフォーマットを調べる
2. Grokのお時間
3. Grok Constructorでテスト
4. logstashのconfファイルで動かしてみる

結構、ステップ面倒いなーって思う人もいるかと思いますが、一つ一つクリアしていくことが大切だと思ってます。
地味ーな作業が盛りだくさんですが、自分の思った通りにFILTERがかかった時が最高に嬉しい瞬間です！


それでは一つ一つ見ていきたいとおもいまするー

== 取り込むログフォーマットを調べる

今回取り込むログは、Apacheのログフォーマットがcommonですね。
Apacheのサイトからログフォーマットについて調べると色々と記載されてます。

Apacheのアクセスログのログフォーマットは以下な感じです。


* LogFormat "%h %l %u %t \"%r\" %>s %b" common
** %h: サーバへリクエストしたクライアントIP
** %l: クライアントのアイデンティティ情報ですが、デフォルト取得しない設定になっているため、”-”（ハイフン）で表示される
** %u: HTTP認証によるリクエストしたユーザID（認証していない場合は、"-"）
** %t: サーバがリクエストを受け取った時刻
** \"%r\": メソッド、パス、プロトコルなど
** %>s: ステータスコード
** %b: クライアントに送信されたオブジェクトサイズ（送れなかった時は、"-"）

== フィールド定義していくよ

アクセスログのログフォーマットがわかったので、フィールド名を定義していきたいと思いますー


* %hは、クライアントIPということで"clientip"
* %lは、アイデンティティ情報なので、"ident"
* %uは、認証なので、"auth"
* %tは、時刻なので"date"
* \"%r\"は、いくつかに分割したいので、メソッドは、"method"、パスは、"path"、んでHTTPバージョンは、"httpversion"
* %>sは、ステータスコードなので、"response"
* %bは、オブジェクトサイズなので、"bytes"


仮に上記がマッピングされると以下のようにいい感じになるはず！


* 5.10.83.30 - - [10/Oct/2000:13:55:36 -0700] "GET /test.html HTTP/1.0" 200 2326
** clientip: 5.10.83.30
** ident: -
** auth: -
** date: 10/Oct/2000:13:55:36 -0700
** method: GET
** path: /test.html
** httpversion: 1.0
** response: 200
** bytes: 2326
